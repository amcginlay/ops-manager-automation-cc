---
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: daily-trigger
  type: time
  source:
    interval: 24h

- name: one-time-trigger
  type: time
  source:
    interval: 999999h

- name: config
  type: git
  source:
    uri: ((config-uri))
    branch: master

- name: state
  type: gcs
  source:
    versioned_file: state.yml
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

- name: platform-automation-pivnet
  type: pivnet
  source:
    api_token: ((pivnet-token))
    product_slug: platform-automation
    product_version: 2\.(.*)
    sort_by: semver

- name: opsman-product
  type: gcs
  source:
    regexp: OpsManager(.*)onGCP.yml
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

- name: pas-product
  type: gcs
  source:
    regexp: srt-(.*).pivotal
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

- name: pas-stemcell
  type: gcs
  source:
    regexp: pas-stemcell/light-bosh-stemcell-(.*)-google.*\.tgz
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

- name: healthwatch-product
  type: gcs
  source:
    regexp: p-healthwatch-(.*).pivotal
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

- name: healthwatch-stemcell
  type: gcs
  source:
    regexp: healthwatch-stemcell/light-bosh-stemcell-(.*)-google.*\.tgz
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

- name: mysql-product
  type: gcs
  source:
    regexp: pivotal-mysql-(.*).pivotal
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

- name: mysql-stemcell
  type: gcs
  source:
    regexp: mysql-stemcell/light-bosh-stemcell-(.*)-google.*\.tgz
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

- name: platform-automation-tasks
  type: gcs
  source:
    regexp: platform-automation-tasks-(.*).zip
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

- name: platform-automation-image
  type: gcs
  source:
    regexp: platform-automation-image-(.*).tgz
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

- name: installation
  type: gcs
  source:
    regexp: installations/installation-(.*).zip
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

jobs:
- name: fetch-opsman
  plan:
  - aggregate:
    - get: daily-trigger
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: download-opsman-image
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: config/ops-manager/2.5/gcp/((product-slug))/config-pivnet.yml
  - aggregate:
    - put: opsman-product
      params:
        file: downloaded-product/*

- name: fetch-pas
  plan:
  - aggregate:
    - get: daily-trigger
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: download-pas-product-and-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: config/cf/2.5/config-pivnet.yml
    output_mapping: {downloaded-stemcell: pas-stemcell}
  - aggregate:
    - put: pas-product
      params:
        file: downloaded-product/*.pivotal
    - put: pas-stemcell
      params:
        file: pas-stemcell/*.tgz

- name: fetch-healthwatch
  plan:
  - aggregate:
    - get: daily-trigger
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: download-healthwatch-product-and-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: config/p-healthwatch/1.4/config-pivnet.yml
    output_mapping: {downloaded-stemcell: healthwatch-stemcell}
  - aggregate:
    - put: healthwatch-product
      params:
        file: downloaded-product/*.pivotal
    - put: healthwatch-stemcell
      params:
        file: healthwatch-stemcell/*.tgz

- name: fetch-mysql
  plan:
  - aggregate:
    - get: daily-trigger
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: download-mysql-product-and-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: config/pivotal-mysql/2.5/config-pivnet.yml
    output_mapping: {downloaded-stemcell: mysql-stemcell}
  - aggregate:
    - put: mysql-product
      params:
        file: downloaded-product/*.pivotal
    - put: mysql-stemcell
      params:
        file: mysql-stemcell/*.tgz

- name: fetch-platform-automation
  # We use the pivnet resource to bootstrap the pipeline,
  # and because this product is part of the pipeline, not the foundation
  plan:
  - get: platform-automation-pivnet
    trigger: true
  - aggregate:
    - put: platform-automation-tasks
      params:
        file: platform-automation-pivnet/*tasks*.zip
    - put: platform-automation-image
      params:
        file: platform-automation-pivnet/*image*.tgz

- name: install-opsman
  serial: true
  serial_groups: [ install ]
  plan:
  - aggregate:
    - get: platform-automation-image
      params:
        unpack: true
    - get: one-time-trigger
      trigger: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: opsman-product
    - get: config
    - get: state
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: create-vm
    image: platform-automation-image
    file: platform-automation-tasks/tasks/create-vm.yml
    input_mapping:
      image: opsman-product
      state: state
      config: config
      vars: config
    params:
      OPSMAN_CONFIG_FILE: config/ops-manager/2.5/gcp/((product-slug))/config-vm.yml
  - put: state
    params:
      file: generated-state/state.yml
  - task: configure-authentication
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-authentication.yml
    attempts: 10
    input_mapping:
      env: config
      config: config
    params:
      ENV_FILE: config/ops-manager/env.yml
      AUTH_CONFIG_FILE: config/ops-manager/auth.yml
  - task: configure-director
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-director.yml
    input_mapping:
      config: config
      env: config
      vars: config
    params:
      ENV_FILE: config/ops-manager/env.yml
      DIRECTOR_CONFIG_FILE: config/ops-manager/2.5/gcp/((product-slug))/config.yml
  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: config
    params:
      ENV_FILE: config/ops-manager/env.yml

- name: export-installation
  serial: true
  plan:
  - aggregate:
    - get: one-time-trigger
      passed: [ install-opsman ]
    - get: daily-trigger
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: export-installation
    image: platform-automation-image
    file: platform-automation-tasks/tasks/export-installation.yml
    input_mapping:
      env: config
    params:
      ENV_FILE: config/ops-manager/env.yml
      INSTALLATION_FILE: installation-$timestamp.zip
  - put: installation
    params:
      file: installation/installation*.zip

- name: upgrade-opsman
  serial: true
  serial_groups: [ install ]
  plan:
  - aggregate:
    - get: one-time-trigger
      passed: [ install-opsman ]
    - get: platform-automation-image
      params:
        unpack: true
      trigger: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: opsman-product
    - get: installation
      passed: [ export-installation ]
    - get: config
    - get: state
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: upgrade-opsman
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upgrade-opsman.yml
    input_mapping:
      image: opsman-product
      state: state
      config: config
      env: config
      vars: config
    params:
      ENV_FILE: config/ops-manager/env.yml
      OPSMAN_CONFIG_FILE: config/ops-manager/2.5/gcp/((product-slug))/config-vm.yml
  - put: state
    params:
      file: generated-state/state.yml
  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: config
    params:
      ENV_FILE: config/ops-manager/env.yml

- name: upload-and-stage-pas
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params:
        unpack: true
      passed:
        - upgrade-opsman
      trigger: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pas-product
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: upload-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-product.yml
    input_mapping:
      product: pas-product
      env: config
    params:
      ENV_FILE: config/ops-manager/env.yml
  - task: stage-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/stage-product.yml
    input_mapping:
      product: pas-product
      env: config
    params:
      ENV_FILE: config/ops-manager/env.yml

- name: upload-and-stage-healthwatch
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params:
        unpack: true
      passed:
        - upgrade-opsman
      trigger: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: healthwatch-product
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: upload-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-product.yml
    input_mapping:
      product: healthwatch-product
      env: config
    params:
      ENV_FILE: config/ops-manager/env.yml
  - task: stage-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/stage-product.yml
    input_mapping:
      product: healthwatch-product
      env: config
    params:
      ENV_FILE: config/ops-manager/env.yml

- name: upload-and-stage-mysql
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params:
        unpack: true
      passed:
        - upgrade-opsman
      trigger: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: mysql-product
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: upload-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-product.yml
    input_mapping:
      product: mysql-product
      env: config
    params:
      ENV_FILE: config/ops-manager/env.yml
  - task: stage-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/stage-product.yml
    input_mapping:
      product: mysql-product
      env: config
    params:
      ENV_FILE: config/ops-manager/env.yml

- name: configure-pas
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params:
        unpack: true
      passed:
        - upload-and-stage-pas
      trigger: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: configure-pas
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: config
      env: config
      vars: config
    params:
      CONFIG_FILE: config/cf/2.5/config.yml
      ENV_FILE: config/ops-manager/env.yml

- name: configure-healthwatch
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params:
        unpack: true
      passed:
        - upload-and-stage-healthwatch
      trigger: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: configure-healthwatch
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: config
      env: config
      vars: config
    params:
      CONFIG_FILE: config/p-healthwatch/1.4/config.yml
      ENV_FILE: config/ops-manager/env.yml

- name: configure-mysql
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params:
        unpack: true
      passed:
        - upload-and-stage-mysql
      trigger: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: configure-mysql
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: config
      env: config
      vars: config
    params:
      CONFIG_FILE: config/pivotal-mysql/2.5/config.yml
      ENV_FILE: config/ops-manager/env.yml

- name: upload-stemcells
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params:
        unpack: true
      passed:
        - upgrade-opsman
      trigger: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pas-stemcell
      trigger: true
    - get: healthwatch-stemcell
      trigger: true
    - get: mysql-stemcell
      trigger: true
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: upload-pas-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      env: config
      stemcell: pas-stemcell
    params:
      ENV_FILE: config/ops-manager/env.yml
  - task: upload-healthwatch-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      env: config
      stemcell: healthwatch-stemcell
    params:
      ENV_FILE: config/ops-manager/env.yml
  - task: upload-mysql-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      env: config
      stemcell: mysql-stemcell
    params:
      ENV_FILE: config/ops-manager/env.yml

- name: apply-product-changes
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params:
        unpack: true
      passed:
        - configure-pas
        - configure-healthwatch
        - configure-mysql
      trigger: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: apply-product-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-changes.yml
    input_mapping:
      env: config
    params:
      ENV_FILE: config/ops-manager/env.yml
